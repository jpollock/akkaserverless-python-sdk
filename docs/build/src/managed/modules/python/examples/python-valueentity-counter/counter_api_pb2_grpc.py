# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import counter_api_pb2 as counter__api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CounterServiceStub(object):
    """<6>
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Increase = channel.unary_unary(
                '/com.example.CounterService/Increase',
                request_serializer=counter__api__pb2.IncreaseValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Decrease = channel.unary_unary(
                '/com.example.CounterService/Decrease',
                request_serializer=counter__api__pb2.DecreaseValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Reset = channel.unary_unary(
                '/com.example.CounterService/Reset',
                request_serializer=counter__api__pb2.ResetValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetCurrentCounter = channel.unary_unary(
                '/com.example.CounterService/GetCurrentCounter',
                request_serializer=counter__api__pb2.GetCounter.SerializeToString,
                response_deserializer=counter__api__pb2.CurrentCounter.FromString,
                )


class CounterServiceServicer(object):
    """<6>
    """

    def Increase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentCounter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CounterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Increase': grpc.unary_unary_rpc_method_handler(
                    servicer.Increase,
                    request_deserializer=counter__api__pb2.IncreaseValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Decrease': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrease,
                    request_deserializer=counter__api__pb2.DecreaseValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=counter__api__pb2.ResetValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCurrentCounter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentCounter,
                    request_deserializer=counter__api__pb2.GetCounter.FromString,
                    response_serializer=counter__api__pb2.CurrentCounter.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.example.CounterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CounterService(object):
    """<6>
    """

    @staticmethod
    def Increase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.CounterService/Increase',
            counter__api__pb2.IncreaseValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decrease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.CounterService/Decrease',
            counter__api__pb2.DecreaseValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.CounterService/Reset',
            counter__api__pb2.ResetValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentCounter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.CounterService/GetCurrentCounter',
            counter__api__pb2.GetCounter.SerializeToString,
            counter__api__pb2.CurrentCounter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
